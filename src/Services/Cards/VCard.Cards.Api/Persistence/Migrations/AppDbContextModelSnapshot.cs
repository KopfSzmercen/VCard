// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VCard.Cards.Api.Persistence;
using VCard.Cards.Api.Projections;

#nullable disable

namespace VCard.Cards.Api.Projections.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cards")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VCard.Cards.Api.Cards.GettingCard.CardResponse", b =>
                {
                    b.Property<Guid>("CardId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("CardId");

                    b.ToTable("CardResponses", "cards");
                });

            modelBuilder.Entity("VCard.Cards.Api.EventStore.Checkpoints.Checkpoint", b =>
                {
                    b.Property<string>("SubscriptionId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CheckpointedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Position")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Checkpoints", "cards");
                });
#pragma warning restore 612, 618
        }
    }
}
